import { type NextPage } from "next";
import Head from "next/head";
import Link from "next/link";
import { signIn, signOut, useSession } from "next-auth/react";

import { api } from "~/utils/api";
import { LOGO, OGSANS } from "~/utils/_fonts";

const Home: NextPage = () => {
  // const hello = api.example.hello.useQuery({ text: "from tRPC" });

  return (
    <>
      <Head>
        <title>TimeSink Presents</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="min-h-screen  bg-dark-theater-primary py-4 ">
        <nav className="flex items-center justify-between">
          <h1
            className={`${LOGO.variable} ml-8 flex items-center justify-start font-logo text-lg normal-case text-mystery-white`}
          >
            TimeSink
          </h1>
          <li
            className={`${OGSANS.variable} mr-8 flex items-center justify-end gap-x-16 font-OGSans text-sm uppercase text-mystery-white`}
          >
            <ul>Cinema</ul>
            <ul>Press</ul>
            <ul>Info</ul>
            <AuthShowcase />
          </li>
        </nav>
        <div className="container flex flex-col items-center justify-center gap-12 px-4 py-16 ">
          {/* <h1
            className={`${LOGO.variable} font-logo text-md text-mystery-white sm:text-[5rem]`}
          >
            TimeSink
            <span
              className={`${LOGO.variable} font-ogsans text-md text-mystery-white`}
            ></span>{" "}
            Presents
          </h1> */}
          {/* <span
            className={`${LOGO_ITALIC.variable} border-[1px] border-neon-red-lightest py-4 px-8 font-logo_italic text-sm text-neon-red-light`}
          >
            livE PrEViEW
          </span> */}
          <div className="grid grid-cols-1 gap-4 sm:grid-cols-2 md:gap-8">
            <Link
              className="flex max-w-xs flex-col gap-4 rounded-xl bg-gray-display-heavy p-4  text-white hover:bg-white/20"
              href="https://create.t3.gg/en/usage/first-steps"
              target="_blank"
            >
              <h3
                className={`${OGSANS.variable} font-OGSans text-2xl font-bold`}
              >
                First Steps →
              </h3>
              <div className={`${OGSANS.variable} font-OGSans text-lg`}>
                Just the basics - Everything you need to know to set up your
                database and authentication.
              </div>
            </Link>
            <Link
              className="flex max-w-xs flex-col gap-4 rounded-xl bg-white/10 p-4 text-white hover:bg-white/20"
              href="https://create.t3.gg/en/introduction"
              target="_blank"
            >
              <h3
                className={`${OGSANS.variable} font-OGSans text-2xl font-bold`}
              >
                Documentation →
              </h3>
              <div className={`${OGSANS.variable} font-OGSans text-lg`}>
                Learn more about Create T3 App, the libraries it uses, and how
                to deploy it.
              </div>
            </Link>
          </div>
          <div
            className={`${OGSANS.variable} flex flex-col items-center gap-2 font-OGSans`}
          >
            {/* <p className="text-2xl text-white">
              {hello.data ? hello.data.greeting : "Loading tRPC query..."}
            </p> */}
            <button className="rounded-md border-2 border-neon-blue-heavy px-4 py-2 text-sm font-semibold text-neon-blue-heavy no-underline transition hover:bg-neon-blue-heavy hover:text-dark-theater-primary">
              Request membership
            </button>
          </div>
        </div>
      </main>
    </>
  );
};

export default Home;

const AuthShowcase: React.FC = () => {
  const { data: sessionData } = useSession();

  const { data: secretMessage } = api.example.getSecretMessage.useQuery(
    undefined, // no input
    { enabled: sessionData?.user !== undefined }
  );

  return (
    <div className="flex items-center justify-center gap-4">
      <p className="text-center text-2xl text-white">
        {sessionData && <span>Logged in as {sessionData.user?.name}</span>}
        {secretMessage && <span> - {secretMessage}</span>}
      </p>
      <button
        className="rounded-md border-2 border-neon-blue-heavy px-4 py-2 text-sm font-semibold text-neon-blue-heavy no-underline transition hover:bg-neon-blue-heavy hover:text-dark-theater-primary"
        onClick={sessionData ? () => void signOut() : () => void signIn()}
      >
        {sessionData ? "Sign out" : "Sign in"}
      </button>
      <button
        className="rounded-md  bg-neon-blue-heavy  px-4 py-2.5 text-sm font-semibold text-dark-theater-primary no-underline transition hover:bg-neon-blue-primary"
        onClick={sessionData ? () => void signOut() : () => void signIn()}
      >
        {"Submit film"}
      </button>
    </div>
  );
};
